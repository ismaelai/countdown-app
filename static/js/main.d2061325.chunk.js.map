{"version":3,"sources":["Clock.jsx","App.jsx","index.js"],"names":["Clock","this","setState","getTimeUntil","timerId","setInterval","timeInSeconds","Math","floor","Date","parse","props","deadline","seconds","minutes","hours","days","clearInterval","amount","singleUnitName","pluralUnitName","className","unitSingleOrPlural","state","Component","getNextYear","current","getFullYear","App","displayDateInputError","parsed","newDeadline","valid","validateNewDeadline","onChange","event","target","value","placeholder","Button","variant","onClick","changeDeadline","Alert","show","onClose","handleDateInputErrorClose","colors","step","colorIndices","undefined","$","c0_0","c0_1","c1_0","c1_1","istep","color1","round","color2","css","background","random","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2061325.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Clock extends Component {\n  componentWillMount() {\n    this.setState(this.getTimeUntil());\n    this.timerId = setInterval(() => this.setState(this.getTimeUntil()), 1000);\n  }\n\n  getTimeUntil() {\n    const timeInSeconds = Math.floor(\n      (Date.parse(this.props.deadline) - Date.parse(new Date())) / 1000,\n    );\n    const seconds = timeInSeconds % 60;\n    const minutes = Math.floor(timeInSeconds / 60) % 60;\n    const hours = Math.floor(timeInSeconds / 60 / 60) % 24;\n    const days = Math.floor(timeInSeconds / 60 / 60 / 24) % 365;\n    return { days, hours, minutes, seconds };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  unitSingleOrPlural(amount, singleUnitName, pluralUnitName) {\n    return `${amount} ${amount === 1 ? singleUnitName : pluralUnitName}`;\n  }\n\n  render() {\n    return (\n      <div className={'Clock'}>\n        <div className=\"Clock-text\">\n          {this.unitSingleOrPlural(this.state.days, 'day', 'days')}\n        </div>\n        <div className=\"Clock-text\">\n          {this.unitSingleOrPlural(this.state.hours, 'hour', 'hours')}\n        </div>\n        <div className=\"Clock-text\">\n          {this.unitSingleOrPlural(this.state.minutes, 'minute', 'minutes')}\n        </div>\n        <div className=\"Clock-text\">\n          {this.unitSingleOrPlural(this.state.seconds, 'second', 'seconds')}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Clock from './Clock';\nimport {Button, Alert } from 'react-bootstrap';\n\nconst getNextYear = () => {\n  const current = new Date().getFullYear();\n  return new Date(`${current + 1}`).getFullYear();\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deadline: 'Introduce a valid date',\n    };\n    this.displayDateInputError = false;\n  }\n\n  validateNewDeadline() {\n    const parsed = Date.parse(this.newDeadline);\n    return !!parsed && parsed > new Date();\n  }\n\n  changeDeadline() {\n    const valid = this.validateNewDeadline();\n\n    const state = valid ? { deadline: this.newDeadline } : this.state;\n    this.displayDateInputError = !valid;\n\n    this.setState(state);\n  }\n\n  handleDateInputErrorClose() {\n    this.displayDateInputError = false;\n    this.setState(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-title-small\">Time until</div>\n        <div className=\"App-title-big\">{this.state.deadline}</div>\n        <Clock deadline={this.state.deadline} />\n        <div className=\"Form\">\n          <input\n            className=\"Deadline-input\"\n            onChange={(event) => (this.newDeadline = event.target.value)}\n            placeholder=\"Enter date\"\n            \n          />\n          <Button\n            variant=\"outline-dark\"\n            onClick={() => this.changeDeadline()}>\n            Submit\n          </Button>\n        </div>\n        <div>\n          <Alert\n            variant=\"warning\"\n            className=\"Input-alert\"\n            show={this.displayDateInputError}\n            onClose={() => this.handleDateInputErrorClose()}\n          >\n            <b>That's a no-go :(</b>{' '}\n            <p>\n              Try entering a valid future date. Example: 'November 5,{' '}\n              {getNextYear()}'\n            </p>\n          </Alert>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*eslint-env jquery*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\n/*\n    Dynamic gradient background logic - from https://speckyboy.com/css-background-effects/\n */\nvar colors = [\n    [62,35,255],\n    [60,255,60],\n    [255,35,98],\n    [45,175,230],\n    [255,0,255],\n    [255,128,0]\n];\n\nvar step = 0;\n//color table indices for:\n// current color left\n// next color left\n// current color right\n// next color right\nvar colorIndices = [0,1,2,3];\n\n//transition speed\nvar gradientSpeed = 0.0005;\n\nfunction updateGradient()\n{\n\n    if ( $===undefined ) return;\n\n    var c0_0 = colors[colorIndices[0]];\n    var c0_1 = colors[colorIndices[1]];\n    var c1_0 = colors[colorIndices[2]];\n    var c1_1 = colors[colorIndices[3]];\n\n    var istep = 1 - step;\n    var r1 = Math.round(istep * c0_0[0] + step * c0_1[0]);\n    var g1 = Math.round(istep * c0_0[1] + step * c0_1[1]);\n    var b1 = Math.round(istep * c0_0[2] + step * c0_1[2]);\n    var color1 = \"rgb(\"+r1+\",\"+g1+\",\"+b1+\")\";\n\n    var r2 = Math.round(istep * c1_0[0] + step * c1_1[0]);\n    var g2 = Math.round(istep * c1_0[1] + step * c1_1[1]);\n    var b2 = Math.round(istep * c1_0[2] + step * c1_1[2]);\n    var color2 = \"rgb(\"+r2+\",\"+g2+\",\"+b2+\")\";\n\n    $('#gradient').css({\n        background: \"-webkit-gradient(linear, left top, right top, from(\"+color1+\"), to(\"+color2+\"))\"}).css({\n        background: \"-moz-linear-gradient(left, \"+color1+\" 0%, \"+color2+\" 100%)\"});\n\n    step += gradientSpeed;\n    if ( step >= 1 )\n    {\n        step %= 1;\n        colorIndices[0] = colorIndices[1];\n        colorIndices[2] = colorIndices[3];\n\n        //pick two new target color indices\n        //do not pick the same as the current one\n        colorIndices[1] = ( colorIndices[1] + Math.floor( 1 + Math.random() * (colors.length - 1))) % colors.length;\n        colorIndices[3] = ( colorIndices[3] + Math.floor( 1 + Math.random() * (colors.length - 1))) % colors.length;\n\n    }\n}\n\nsetInterval(updateGradient,10);\n\n/**************************************************************************************************/\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n\n"],"sourceRoot":""}